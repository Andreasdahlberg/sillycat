/**
 * @file   font.h
 * @Author {author}
 * @date   {date}
 * @brief  {brief}
 *
 * Detailed description of file.
 */

/*
 * THIS FILE IS GENERATED, DO NOT EDIT!
*/

#ifndef FONT_H_
#define FONT_H_

//////////////////////////////////////////////////////////////////////////
//INCLUDES
//////////////////////////////////////////////////////////////////////////

#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

//////////////////////////////////////////////////////////////////////////
//DEFINES
//////////////////////////////////////////////////////////////////////////

#define MONO_FONT {monospace_font}

//////////////////////////////////////////////////////////////////////////
//TYPE DEFINITIONS
//////////////////////////////////////////////////////////////////////////

typedef struct
{{
    const uint8_t *data;
    uint8_t width;
    uint8_t height;
    int8_t baseline_offset;
    uint8_t horizontal_bearing;
#if !MONO_FONT
    uint8_t advance;
#endif
}} glyph_info_t;


typedef struct
{{
    char name[32];
#if MONO_FONT
    uint8_t advance;
#endif
    const glyph_info_t *char_info;
}} font_info_t;


//////////////////////////////////////////////////////////////////////////
//VARIABLES
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
//LOCAL FUNCTION PROTOTYPES
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
//FUNCTIONS
//////////////////////////////////////////////////////////////////////////

bool Font_GetGlyphInfo(char glyph_value, glyph_info_t *glyph);
size_t Font_GetNumberOfGlyphs(void);
uint8_t Font_GetAdvance(glyph_info_t *glyph __attribute__ ((unused)));
bool Font_IsMono(void);

//////////////////////////////////////////////////////////////////////////
//LOCAL FUNCTIONS
//////////////////////////////////////////////////////////////////////////

#endif
